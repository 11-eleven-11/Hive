Run 0.3.0 alpha
----------------

Thanks for evaluating this alpha version of Run. Please keep confidential.

To give it a go, visit https://star.store for tutorials.

Installation
- run `npm install` to install node dependencies

Contents
- getting_started.html: Documentation portal and explorer
- dist: Minified library builds
- docs: Static HTML documentation
- examples: Sample code

Known Limitations
- Sets, Maps, Date, and Math are not supported within jigs

Change Log
----------
0.3.0: Non-spending reads
       Global Jig not tied to a particular Run instance
       run.activate() to switch between Run instances
       Class.owner
       `op_false op_return` protocol prefix
0.2.9: Class lists: Pass and store classes into jigs
       Upgradable behavior: Deploy, pass, and store functions as code
       Make methods and variables private using _ prefix
       run.downloadCode() -> run.load() (loads classes too)
       run.uploadCode() -> run.deploy()
       run.classes() -> run.code()
       Store code as static class properties
       Bug fixes, security improvements, protocol optimizations
0.2.8: Rename run.wallet to run.purse
       Locations and origins use underscore separators
       jig.sync() updates forward to the latest state
       purse.balance() and purse.utxos() methods
       Introducing the Pay API for new payment methods
       Bug fix to support using same owner and wallet keys
0.2.7: Star Query, a new blockchain API
       Create jig libraries using originMainnet and originTestnet
       Testnet explorer
       Bug fixes, improved logging
0.2.6: Fungible tokens (ie. ERC-20)
       Class properties
       Jig icon support for explorers
       New examples for backed jigs and tokens
       Improved network caching
0.2.5: Jigs backed by satoshis
       Performance improvements to jigs and mockchain
       Run.owner.pubkey is a bsv.PublicKey now
       Reading origin inside a jig is supported
       Bug fixes, security improvements, and better messages
0.2.4: Include website
0.2.3: Fetch time of transactions
0.2.2: Read-only mode
0.2.1: Owned classes
0.2.0: Full verification, arrays, whatsonchain api, bug fixes
0.1.10: Prevent loading non-tokens
0.1.9: Enforce min fees on mockchain
0.1.8: Batch transaction bug fix
0.1.7: JavaScript library sandboxing
0.1.6: Upload code bug fix
0.1.5: Custom Blockchain API support
0.1.4: Support node 8-10
0.1.3: Improve error messages
0.1.2: Reduce build size
0.1.1: Separate node and browser builds
0.1.0: Initial alpha release
